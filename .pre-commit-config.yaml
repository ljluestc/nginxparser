repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format code with black
        language_version: python3
        args: ['--line-length=127']

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ['--profile', 'black', '--line-length=127']

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        name: Lint with flake8
        args: ['--max-line-length=127', '--extend-ignore=E203,E501,W503']

  - repo: https://github.com/pycqa/pylint
    rev: v3.3.1
    hooks:
      - id: pylint
        name: Lint with pylint
        args: ['--max-line-length=127', '--disable=C0111,R0903']
        files: \.py$

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        name: Type check with mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']
        files: \.py$

  # Security
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        name: Security scan with bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']

  # General checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=500']
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: debug-statements
        name: Check for debug statements
      - id: mixed-line-ending
        name: Fix mixed line endings
      - id: check-executables-have-shebangs
        name: Check executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang scripts are executable

  # Python syntax validation
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
        name: Check blanket noqa
      - id: python-check-blanket-type-ignore
        name: Check blanket type ignore
      - id: python-use-type-annotations
        name: Check type annotations
      - id: python-check-mock-methods
        name: Check mock methods

  # Testing (run quick tests on commit)
  - repo: local
    hooks:
      - id: pytest-quick
        name: Run quick tests
        entry: python3 -m pytest
        args: ['test_unit_comprehensive.py', '-x', '--tb=short', '-q']
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]

      - id: coverage-check
        name: Check test coverage
        entry: python3 -m coverage
        args: ['run', '--source=nginx', 'test_comprehensive.py']
        language: system
        pass_filenames: false
        always_run: false
        stages: [push]

  # Commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        name: Validate commit message
        stages: [commit-msg]
        args: ['--force-scope']

# Configuration
default_language_version:
  python: python3

# Global settings
fail_fast: false
