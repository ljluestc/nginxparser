# Comprehensive nginx configuration for testing all parsing features

user nginx;
worker_processes 8;
worker_cpu_affinity auto;
error_log /var/log/nginx/error.log error;
pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections 20480;
    multi_accept on;
    accept_mutex off;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_vary on;
    gzip_proxied any;

    upstream backend_api {
        server 192.168.1.10:8080 weight=5;
        server 192.168.1.11:8080 weight=5;
        server 192.168.1.12:8080 weight=3;
    }

    upstream backend_web {
        server 10.0.0.10:80 weight=10;
        server 10.0.0.11:80 weight=10;
    }

    server {
        listen       80;
        server_name  example.com www.example.com;
        root   /var/www/html;

        access_log  /var/log/nginx/example.access.log  main;

        location / {
            index  index.html index.htm;
        }

        location /api {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://backend_api;
        }

        location /static {
            proxy_pass http://backend_web;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen       443 ssl;
        server_name  secure.example.com;
        root   /var/www/secure;

        ssl_certificate      /etc/nginx/ssl/cert.pem;
        ssl_certificate_key  /etc/nginx/ssl/cert.key;

        location / {
            index  index.html;
        }

        location /backend {
            proxy_pass http://backend_api;
        }
    }
}
